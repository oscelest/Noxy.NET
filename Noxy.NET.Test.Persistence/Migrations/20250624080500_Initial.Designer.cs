// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Noxy.NET.Test.Persistence;

#nullable disable

namespace Noxy.NET.Test.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20250624080500_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Authentication.TableAuthentication", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.ToTable("TableAuthentication");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Authentication.TableIdentity", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Handle")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeSignIn")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UserID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("varchar(32)");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("UserID");

                    b.ToTable("TableIdentity");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Authentication.TableUser", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AuthenticationID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(256)");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeSignIn")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TimeVerified")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("AuthenticationID")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TimeCreated");

                    b.ToTable("TableUser");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.Discriminators.TableDataProperty", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ElementID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ElementID");

                    b.HasIndex("TimeCreated");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.TableDataElement", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.ToTable("TableDataElement");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.TableDataSystemParameter", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TimeApproved")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeEffective")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.ToTable("TableDataSystemParameter");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.TableDataTextParameter", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("TimeApproved")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeEffective")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.ToTable("TableDataTextParameter");

                    b.HasData(
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e9-142d13f18fb0"),
                            SchemaIdentifier = "DefaultEmptyValue",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "-"
                        },
                        new
                        {
                            ID = new Guid("019764ca-25c4-7785-bd02-ebdc5a27fb39"),
                            SchemaIdentifier = "ButtonActivate",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Activate"
                        },
                        new
                        {
                            ID = new Guid("019764ca-25c4-7785-bd02-efa276b57b62"),
                            SchemaIdentifier = "ButtonCreate",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Create"
                        },
                        new
                        {
                            ID = new Guid("019764ca-25c4-7785-bd02-f1e439a3bb07"),
                            SchemaIdentifier = "ButtonUpdate",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Update"
                        },
                        new
                        {
                            ID = new Guid("019764ca-25c4-7785-bd02-f7c5260cb82d"),
                            SchemaIdentifier = "ButtonSubmit",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Submit"
                        },
                        new
                        {
                            ID = new Guid("01977fb8-8d9e-7179-b098-d37940c4d817"),
                            SchemaIdentifier = "ButtonSignIn",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Sign in"
                        },
                        new
                        {
                            ID = new Guid("01977fb8-8d9e-7179-b098-d431e095ba95"),
                            SchemaIdentifier = "ButtonSignUp",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Sign up"
                        },
                        new
                        {
                            ID = new Guid("01978309-3029-74e9-931c-436de21f95b0"),
                            SchemaIdentifier = "LinkNavigationSchema",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Schemas"
                        },
                        new
                        {
                            ID = new Guid("019789f9-2601-72ac-ad27-ea4b8f4855d6"),
                            SchemaIdentifier = "LabelFormSchemaIdentifier",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Schema identifier"
                        },
                        new
                        {
                            ID = new Guid("019789f9-2601-72ac-ad27-f1f7ad078b01"),
                            SchemaIdentifier = "LabelFormName",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Name"
                        },
                        new
                        {
                            ID = new Guid("019789f9-2601-72ac-ad27-f7c76f0002d4"),
                            SchemaIdentifier = "LabelFormNote",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Note"
                        },
                        new
                        {
                            ID = new Guid("019789f9-2601-72ac-ad27-f9ef87027fec"),
                            SchemaIdentifier = "LabelFormTitle",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Title"
                        },
                        new
                        {
                            ID = new Guid("019789f9-2601-72ac-ad27-fceadc8f7eda"),
                            SchemaIdentifier = "LabelFormDescription",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Description"
                        },
                        new
                        {
                            ID = new Guid("019789f9-2601-72ac-ad28-0204b7c6d497"),
                            SchemaIdentifier = "LabelFormOrder",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Order"
                        },
                        new
                        {
                            ID = new Guid("019789f9-2601-72ac-ad27-ed762c6df40e"),
                            SchemaIdentifier = "LabelFormInputID",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Input type"
                        },
                        new
                        {
                            ID = new Guid("01978a17-7901-7131-8b49-0a2832bb83bd"),
                            SchemaIdentifier = "LabelFormValue",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Value"
                        },
                        new
                        {
                            ID = new Guid("01978a17-7901-7131-8b49-0cb8c0a70a25"),
                            SchemaIdentifier = "LabelFormDefaultValue",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Default value"
                        },
                        new
                        {
                            ID = new Guid("01978a17-7901-7131-8b49-1200bad01c81"),
                            SchemaIdentifier = "LabelFormIsApprovalRequired",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Is approval required?"
                        },
                        new
                        {
                            ID = new Guid("01978a17-7901-7131-8b49-179f268688f2"),
                            SchemaIdentifier = "LabelFormIsAsynchronous",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Is asynchronous?"
                        },
                        new
                        {
                            ID = new Guid("01978a1f-f0a2-731f-b17d-1981b375a5db"),
                            SchemaIdentifier = "LabelFormIsRepeatable",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Is repeatable?"
                        },
                        new
                        {
                            ID = new Guid("01978a1f-f0a2-731f-b17d-1e57e7540e08"),
                            SchemaIdentifier = "LabelFormAttributeType",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Attribute type"
                        },
                        new
                        {
                            ID = new Guid("01978a1f-f0a2-731f-b17d-2174a6ecd4fe"),
                            SchemaIdentifier = "LabelFormTextParameterType",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Text parameter type"
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-aa11a0e1ce60"),
                            SchemaIdentifier = "LabelFormDynamicValueTypeList",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Choose dynamic value type"
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-ae413650b40c"),
                            SchemaIdentifier = "LabelFormPropertyTypeList",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Choose property type"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-6a3f0bf60dae"),
                            SchemaIdentifier = "LabelFormIsList",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Is value list?"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-6c45805d80a3"),
                            SchemaIdentifier = "LabelFormBoolean",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Boolean"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-72817ce487a1"),
                            SchemaIdentifier = "LabelFormDateTime",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "DateTime"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-77fdd478928f"),
                            SchemaIdentifier = "LabelFormDecimal",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Decimal"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-781625aca070"),
                            SchemaIdentifier = "LabelFormInteger",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Integer"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-7c0e241b9622"),
                            SchemaIdentifier = "LabelFormString",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "String"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-809a8b75e571"),
                            SchemaIdentifier = "LabelFormDynamicValueCode",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Code"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-86038825b246"),
                            SchemaIdentifier = "LabelFormDynamicValueStyleParameter",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Style parameter"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-8bd3f0f5e948"),
                            SchemaIdentifier = "LabelFormDynamicValueSystemParameter",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "System parameter"
                        },
                        new
                        {
                            ID = new Guid("019799a4-1a2b-7368-9b33-8c2e6b4a0b6d"),
                            SchemaIdentifier = "LabelFormDynamicValueTextParameter",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Text parameter"
                        },
                        new
                        {
                            ID = new Guid("019789fc-18dc-73ee-94b6-1564b2f72eb7"),
                            SchemaIdentifier = "HelpFormSchemaIdentifier",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The unique, humanly readable identifier for this entity type."
                        },
                        new
                        {
                            ID = new Guid("019789fc-18dc-73ee-94b6-18a6e3314ccd"),
                            SchemaIdentifier = "HelpFormInputID",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The type of input this entity is related with."
                        },
                        new
                        {
                            ID = new Guid("019789fc-18dc-73ee-94b6-1c60e96f26a9"),
                            SchemaIdentifier = "HelpFormName",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The internal name of this entity type. Should only be visible in the configuration."
                        },
                        new
                        {
                            ID = new Guid("019789fc-18dc-73ee-94b6-21b290f8401d"),
                            SchemaIdentifier = "HelpFormNote",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "A short note detailing how this entity type is used. Should only be visible in the configuration."
                        },
                        new
                        {
                            ID = new Guid("019789fc-18dc-73ee-94b6-26ead5f18d4d"),
                            SchemaIdentifier = "HelpFormTitle",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The title used when displaying an entity of this type."
                        },
                        new
                        {
                            ID = new Guid("019789fc-18dc-73ee-94b6-28dc0edf9b69"),
                            SchemaIdentifier = "HelpFormDescription",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The description used when displaying an entity of this type."
                        },
                        new
                        {
                            ID = new Guid("019789fc-18dc-73ee-94b6-2ee0b27366dc"),
                            SchemaIdentifier = "HelpFormOrder",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The order in which this entity type is sorted."
                        },
                        new
                        {
                            ID = new Guid("01978a17-b7b1-772f-a129-5fe41a2f1676"),
                            SchemaIdentifier = "HelpFormValue",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The code snippet to be run. Must return a value."
                        },
                        new
                        {
                            ID = new Guid("01978a17-b7b1-772f-a129-6253fc96820a"),
                            SchemaIdentifier = "HelpFormDefaultValue",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The default value that will be used for this entity type."
                        },
                        new
                        {
                            ID = new Guid("01978a17-b7b1-772f-a129-66dba634b0b5"),
                            SchemaIdentifier = "HelpFormIsApprovalRequired",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Determines if another user must approve a text parameter value before it becomes active."
                        },
                        new
                        {
                            ID = new Guid("01978a17-b7b1-772f-a129-68c0836a0759"),
                            SchemaIdentifier = "HelpFormIsAsynchronous",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Determines if the method will be run as asynchronous code."
                        },
                        new
                        {
                            ID = new Guid("01978a20-9692-72ff-be7d-ac500344bf4b"),
                            SchemaIdentifier = "HelpFormIsRepeatable",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Determines if this step can be completed with multiple results."
                        },
                        new
                        {
                            ID = new Guid("01978a20-9692-72ff-be7d-b08279f62f4a"),
                            SchemaIdentifier = "HelpFormAttributeType",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The type of attribute."
                        },
                        new
                        {
                            ID = new Guid("01978a20-9692-72ff-be7d-b59a17facafb"),
                            SchemaIdentifier = "HelpFormTextParameterType",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "The type of text parameter."
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-b830dc26f9f4"),
                            SchemaIdentifier = "HelpFormDynamicValueTypeList",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = ""
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-bf20682e54af"),
                            SchemaIdentifier = "HelpFormPropertyTypeList",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = ""
                        },
                        new
                        {
                            ID = new Guid("01978a20-9692-72ff-be7d-ba24274b04c3"),
                            SchemaIdentifier = "HelpFormIsList",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Determines if this input attribute can be configured with a list of values."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-2d147f778de8"),
                            SchemaIdentifier = "HelpFormBoolean",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a boolean value."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-300f0306a227"),
                            SchemaIdentifier = "HelpFormDateTime",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a datetime value."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-35f76c49841a"),
                            SchemaIdentifier = "HelpFormDecimal",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a decimal value."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-3a924229a88a"),
                            SchemaIdentifier = "HelpFormInteger",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a integer value."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-3ca405bc7246"),
                            SchemaIdentifier = "HelpFormString",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a string value."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-40860609aed2"),
                            SchemaIdentifier = "HelpFormDynamicValueCode",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a dynamic code value."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-473fbbc23ec3"),
                            SchemaIdentifier = "HelpFormDynamicValueStyleParameter",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a dynamic style parameter value."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-48183a3903a4"),
                            SchemaIdentifier = "HelpFormDynamicValueSystemParameter",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a dynamic system parameter value."
                        },
                        new
                        {
                            ID = new Guid("019799a6-6b05-7029-b9a7-4c3fb79cf9d1"),
                            SchemaIdentifier = "HelpFormDynamicValueTextParameter",
                            TimeApproved = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeEffective = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Value = "Represents a dynamic text parameter value."
                        });
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableAssociationSchemaActionInputHasAttribute", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RelationID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("EntityID");

                    b.HasIndex("RelationID");

                    b.HasIndex("TimeCreated");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("SchemaID");

                    b.HasIndex("TimeCreated");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaProperty", b =>
                {
                    b.Property<Guid>("ID")
                        .HasColumnType("TEXT");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("SchemaID");

                    b.HasIndex("TimeCreated");

                    b.ToTable((string)null);

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaActionHasActionStep", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RelationID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RelationID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("EntityID", "RelationID")
                        .IsUnique();

                    b.ToTable("TableJunctionSchemaActionHasActionStep");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaActionHasDynamicValueCode", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RelationID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RelationID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("EntityID", "RelationID")
                        .IsUnique();

                    b.ToTable("TableJunctionSchemaActionHasDynamicValueCode");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaActionStepHasActionInput", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RelationID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RelationID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("EntityID", "RelationID")
                        .IsUnique();

                    b.ToTable("TableJunctionSchemaActionStepHasActionInput");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaContextHasAction", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RelationID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RelationID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("EntityID", "RelationID")
                        .IsUnique();

                    b.ToTable("TableJunctionSchemaContextHasAction");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaContextHasElement", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RelationID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RelationID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("EntityID", "RelationID")
                        .IsUnique();

                    b.ToTable("TableJunctionSchemaContextHasElement");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaElementHasProperty", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RelationID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RelationID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("EntityID", "RelationID")
                        .IsUnique();

                    b.ToTable("TableJunctionSchemaElementHasProperty");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaInputHasAttribute", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("EntityID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("RelationID")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("RelationID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("EntityID", "RelationID")
                        .IsUnique();

                    b.ToTable("TableJunctionSchemaInputHasAttribute");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("TimeActivated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.ToTable("TableSchema");

                    b.HasData(
                        new
                        {
                            ID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            IsActive = true,
                            Name = "Base schema",
                            Note = "This is a base schema intended to be cloned and extended.",
                            Order = 1,
                            TimeActivated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAction", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TitleDynamicID")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("TitleDynamicID");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaAction");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionInput", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("InputID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("InputID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaActionInput");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionStep", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsRepeatable")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaActionStep");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAttribute", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsList")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaAttribute");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaContext", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaContext");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaElement", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaElement");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaGroupElement", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaGroupElement");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaInput", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<int>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("SchemaID")
                        .HasColumnType("TEXT");

                    b.Property<string>("SchemaIdentifier")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("TimeCreated");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaInput");

                    b.HasData(
                        new
                        {
                            ID = new Guid("01974e8c-ecb8-75ab-9070-f0fed39b9c54"),
                            Name = "Checkbox",
                            Note = "The base checkbox input type.",
                            Order = 1,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ActionInputCheckbox",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ID = new Guid("01974e8c-ecb8-75ab-9070-f625218aed76"),
                            Name = "Date input",
                            Note = "The base date input type.",
                            Order = 2,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ActionInputDate",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ID = new Guid("019765f7-2847-757d-8d6f-e48dbec5bbeb"),
                            Name = "Decimal input",
                            Note = "The base decimal input type.",
                            Order = 3,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ActionInputDecimal",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ID = new Guid("019765f7-2847-757d-8d6f-ea72d6453f86"),
                            Name = "Integer input",
                            Note = "The base integer input type.",
                            Order = 4,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ActionInputInteger",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ID = new Guid("019765f7-2847-757d-8d6f-ec49fff67113"),
                            Name = "Password input",
                            Note = "The base password input type.",
                            Order = 5,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ActionInputPassword",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ID = new Guid("019765f7-2847-757d-8d6f-ec49fff67fa1"),
                            Name = "Single choice input",
                            Note = "The base single choice input type.",
                            Order = 6,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ActionInputSingleChoice",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        },
                        new
                        {
                            ID = new Guid("01974e8c-ecb8-75ab-9070-f8a855e17dda"),
                            Name = "Text input",
                            Note = "The base text input type.",
                            Order = 7,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ActionInputText",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("TableSchemaElementTableSchemaGroupElement", b =>
                {
                    b.Property<Guid>("ElementListID")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("GroupElementListID")
                        .HasColumnType("TEXT");

                    b.HasKey("ElementListID", "GroupElementListID");

                    b.HasIndex("GroupElementListID");

                    b.ToTable("TableSchemaElementTableSchemaGroupElement");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.TableDataPropertyBoolean", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Data.Discriminators.TableDataProperty");

                    b.Property<bool?>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("TableDataPropertyBoolean");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.TableDataPropertyDateTime", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Data.Discriminators.TableDataProperty");

                    b.Property<DateTime?>("Value")
                        .HasColumnType("TEXT");

                    b.ToTable("TableDataPropertyDateTime");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.TableDataPropertyString", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Data.Discriminators.TableDataProperty");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.ToTable("TableDataPropertyString");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Associations.TableAssociationSchemaActionInputHasAttributeDynamicValue", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableAssociationSchemaActionInputHasAttribute");

                    b.Property<Guid>("ValueID")
                        .HasColumnType("TEXT");

                    b.HasIndex("ValueID");

                    b.ToTable("TableAssociationSchemaActionInputHasAttributeDynamicValue");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Associations.TableAssociationSchemaActionInputHasAttributeInteger", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableAssociationSchemaActionInputHasAttribute");

                    b.Property<int>("Value")
                        .HasColumnType("INTEGER");

                    b.ToTable("TableAssociationSchemaActionInputHasAttributeInteger");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Associations.TableAssociationSchemaActionInputHasAttributeString", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableAssociationSchemaActionInputHasAttribute");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.ToTable("TableAssociationSchemaActionInputHasAttributeString");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaDynamicValueCode", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue");

                    b.Property<bool>("IsAsynchronous")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaDynamicValueCode");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaDynamicValueStyleParameter", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue");

                    b.Property<bool>("IsApprovalRequired")
                        .HasColumnType("INTEGER");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaDynamicValueStyleParameter");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaDynamicValueSystemParameter", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue");

                    b.Property<bool>("IsApprovalRequired")
                        .HasColumnType("INTEGER");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaDynamicValueSystemParameter");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaDynamicValueTextParameter", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue");

                    b.Property<bool>("IsApprovalRequired")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaDynamicValueTextParameter");

                    b.HasData(
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e9-11f9d8b81e8a"),
                            Name = "DefaultEmptyValue",
                            Note = "",
                            Order = 1,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "DefaultEmptyValue",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019764ca-25c4-7785-bd02-daa168ae477d"),
                            Name = "ButtonActivate",
                            Note = "",
                            Order = 2,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ButtonActivate",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019764ca-25c4-7785-bd02-de67a804e592"),
                            Name = "ButtonCreate",
                            Note = "",
                            Order = 3,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ButtonCreate",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019764ca-25c4-7785-bd02-e26550fa3aa9"),
                            Name = "ButtonUpdate",
                            Note = "",
                            Order = 4,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ButtonUpdate",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019764ca-25c4-7785-bd02-e5902e766443"),
                            Name = "ButtonSubmit",
                            Note = "",
                            Order = 5,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ButtonSubmit",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01977fb8-8d9e-7179-b098-d8800c456351"),
                            Name = "ButtonSignIn",
                            Note = "",
                            Order = 6,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ButtonSignIn",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01977fb8-8d9e-7179-b098-dde7fae42dc4"),
                            Name = "ButtonSignUp",
                            Note = "",
                            Order = 7,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "ButtonSignUp",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978309-3029-74e9-931c-3cf1322948fd"),
                            Name = "LinkNavigationSchema",
                            Note = "",
                            Order = 8,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LinkNavigationSchema",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789de-e449-71aa-ab1d-0992c66a9dae"),
                            Name = "LabelFormSchemaIdentifier",
                            Note = "",
                            Order = 9,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormSchemaIdentifier",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789de-e449-71aa-ab1d-12e8b546b239"),
                            Name = "LabelFormName",
                            Note = "",
                            Order = 10,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormName",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789de-e449-71aa-ab1d-17209b94ded6"),
                            Name = "LabelFormNote",
                            Note = "",
                            Order = 11,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormNote",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789de-e449-71aa-ab1d-192c4a3c0eb6"),
                            Name = "LabelFormTitle",
                            Note = "",
                            Order = 12,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormTitle",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789de-e449-71aa-ab1d-1c1707f61f89"),
                            Name = "LabelFormDescription",
                            Note = "",
                            Order = 13,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDescription",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789de-e449-71aa-ab1d-205e04219122"),
                            Name = "LabelFormOrder",
                            Note = "",
                            Order = 14,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormOrder",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789de-e449-71aa-ab1d-0e7af6463e30"),
                            Name = "LabelFormInputID",
                            Note = "",
                            Order = 15,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormInputID",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a17-7901-7131-8b48-f882aa64e37a"),
                            Name = "LabelFormValue",
                            Note = "",
                            Order = 16,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormValue",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a17-7901-7131-8b48-ff6a41005bb3"),
                            Name = "LabelFormDefaultValue",
                            Note = "",
                            Order = 17,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDefaultValue",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a17-7901-7131-8b49-005b042a1608"),
                            Name = "LabelFormIsApprovalRequired",
                            Note = "",
                            Order = 18,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormIsApprovalRequired",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a17-7901-7131-8b49-07a43e807dfd"),
                            Name = "LabelFormIsAsynchronous",
                            Note = "",
                            Order = 19,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormIsAsynchronous",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a1f-f0a2-731f-b17d-0991eba49899"),
                            Name = "LabelFormIsRepeatable",
                            Note = "",
                            Order = 20,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormIsRepeatable",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a1f-f0a2-731f-b17d-0e2bbf4c0700"),
                            Name = "LabelFormAttributeType",
                            Note = "",
                            Order = 21,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormAttributeType",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a1f-f0a2-731f-b17d-12579bcc7198"),
                            Name = "LabelFormTextParameterType",
                            Note = "",
                            Order = 22,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormTextParameterType",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-a291a3ca06d4"),
                            Name = "LabelFormDynamicValueTypeList",
                            Note = "",
                            Order = 23,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDynamicValueTypeList",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-a5aa1089fe1b"),
                            Name = "LabelFormPropertyTypeList",
                            Note = "",
                            Order = 24,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormPropertyTypeList",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a1f-f0a2-731f-b17d-14f803055489"),
                            Name = "LabelFormIsList",
                            Note = "",
                            Order = 25,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormIsList",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-b7144f565f3f"),
                            Name = "LabelFormBoolean",
                            Note = "",
                            Order = 26,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormBoolean",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-b8b9e65fa2e9"),
                            Name = "LabelFormDateTime",
                            Note = "",
                            Order = 27,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDateTime",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-be98a390cf1a"),
                            Name = "LabelFormDecimal",
                            Note = "",
                            Order = 28,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDecimal",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-c0efbd9b5dbb"),
                            Name = "LabelFormInteger",
                            Note = "",
                            Order = 29,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormInteger",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-c449cc81422f"),
                            Name = "LabelFormString",
                            Note = "",
                            Order = 30,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormString",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-c9599b28ac9c"),
                            Name = "LabelFormDynamicValueCode",
                            Note = "",
                            Order = 31,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDynamicValueCode",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-cd308b80c164"),
                            Name = "LabelFormDynamicValueStyleParameter",
                            Note = "",
                            Order = 32,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDynamicValueStyleParameter",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-d3344af0a274"),
                            Name = "LabelFormDynamicValueSystemParameter",
                            Note = "",
                            Order = 33,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDynamicValueSystemParameter",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a3-a72f-725a-b4f6-d6b06a4f6d1b"),
                            Name = "LabelFormDynamicValueTextParameter",
                            Note = "",
                            Order = 34,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "LabelFormDynamicValueTextParameter",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e8-f7a6abf0c139"),
                            Name = "HelpFormSchemaIdentifier",
                            Note = "",
                            Order = 35,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormSchemaIdentifier",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e8-f819edf63934"),
                            Name = "HelpFormName",
                            Note = "",
                            Order = 36,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormName",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e8-ffd616e87b30"),
                            Name = "HelpFormNote",
                            Note = "",
                            Order = 37,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormNote",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e9-0229499f0ddd"),
                            Name = "HelpFormTitle",
                            Note = "",
                            Order = 38,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormTitle",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e9-046632ba51b7"),
                            Name = "HelpFormDescription",
                            Note = "",
                            Order = 39,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDescription",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e9-0a5f8ca00604"),
                            Name = "HelpFormOrder",
                            Note = "",
                            Order = 40,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormOrder",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019789fc-3929-75a9-99e9-0c9241c61162"),
                            Name = "HelpFormInputID",
                            Note = "",
                            Order = 41,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormInputID",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a17-b7b1-772f-a129-4ce642008489"),
                            Name = "HelpFormValue",
                            Note = "",
                            Order = 42,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormValue",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a17-b7b1-772f-a129-52ee6b9269cd"),
                            Name = "HelpFormDefaultValue",
                            Note = "",
                            Order = 43,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDefaultValue",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a17-b7b1-772f-a129-543b087e1606"),
                            Name = "HelpFormIsApprovalRequired",
                            Note = "",
                            Order = 44,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormIsApprovalRequired",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a17-b7b1-772f-a129-5bbae750bee1"),
                            Name = "HelpFormIsAsynchronous",
                            Note = "",
                            Order = 45,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormIsAsynchronous",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a20-9692-72ff-be7d-9cb3d3d46359"),
                            Name = "HelpFormIsRepeatable",
                            Note = "",
                            Order = 46,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormIsRepeatable",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a20-9692-72ff-be7d-a3b72d338572"),
                            Name = "HelpFormAttributeType",
                            Note = "",
                            Order = 47,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormAttributeType",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-b33557c5a806"),
                            Name = "HelpFormTextParameterType",
                            Note = "",
                            Order = 48,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormTextParameterType",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-c3a68639a28a"),
                            Name = "HelpFormDynamicValueTypeList",
                            Note = "",
                            Order = 49,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDynamicValueTypeList",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01979d14-54ad-72f9-b5d8-c4050ea1f0fd"),
                            Name = "HelpFormPropertyTypeList",
                            Note = "",
                            Order = 50,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormPropertyTypeList",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("01978a20-9692-72ff-be7d-a9bb3d99565a"),
                            Name = "HelpFormIsList",
                            Note = "",
                            Order = 51,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormIsList",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-97a26b3415dc"),
                            Name = "HelpFormBoolean",
                            Note = "",
                            Order = 52,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormBoolean",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-986c4570a7bd"),
                            Name = "HelpFormDateTime",
                            Note = "",
                            Order = 53,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDateTime",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-9f89357ebb7f"),
                            Name = "HelpFormDecimal",
                            Note = "",
                            Order = 54,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDecimal",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-a390807971d2"),
                            Name = "HelpFormInteger",
                            Note = "",
                            Order = 55,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormInteger",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-a44ca62f2e18"),
                            Name = "HelpFormString",
                            Note = "",
                            Order = 56,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormString",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-a93e37c915a8"),
                            Name = "HelpFormDynamicValueCode",
                            Note = "",
                            Order = 57,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDynamicValueCode",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-ad7a01af4eac"),
                            Name = "HelpFormDynamicValueStyleParameter",
                            Note = "",
                            Order = 58,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDynamicValueStyleParameter",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-b0be19e7dcdd"),
                            Name = "HelpFormDynamicValueSystemParameter",
                            Note = "",
                            Order = 59,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDynamicValueSystemParameter",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        },
                        new
                        {
                            ID = new Guid("019799a6-8dc0-75af-8866-b4f08d0df491"),
                            Name = "HelpFormDynamicValueTextParameter",
                            Note = "",
                            Order = 60,
                            SchemaID = new Guid("01974e8c-ecb8-75ab-9070-ef902ff370a7"),
                            SchemaIdentifier = "HelpFormDynamicValueTextParameter",
                            TimeCreated = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsApprovalRequired = false,
                            Type = 0
                        });
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaPropertyBoolean", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaProperty");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaPropertyBoolean");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaPropertyDateTime", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaProperty");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaPropertyDateTime");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaPropertyString", b =>
                {
                    b.HasBaseType("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaProperty");

                    b.HasIndex("SchemaID", "SchemaIdentifier")
                        .IsUnique();

                    b.ToTable("TableSchemaPropertyString");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Authentication.TableIdentity", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Authentication.TableUser", "User")
                        .WithMany("IdentityList")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Authentication.TableUser", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Authentication.TableAuthentication", "Authentication")
                        .WithOne("User")
                        .HasForeignKey("Noxy.NET.Test.Persistence.Tables.Authentication.TableUser", "AuthenticationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Authentication");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.Discriminators.TableDataProperty", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Data.TableDataElement", "Element")
                        .WithMany("PropertyList")
                        .HasForeignKey("ElementID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Element");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableAssociationSchemaActionInputHasAttribute", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionInput", "Entity")
                        .WithMany("AttributeList")
                        .HasForeignKey("EntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAttribute", "Relation")
                        .WithMany()
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("DynamicValueList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaProperty", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("PropertyList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaActionHasActionStep", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAction", "Entity")
                        .WithMany("ActionStepList")
                        .HasForeignKey("EntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionStep", "Relation")
                        .WithMany("ActionList")
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaActionHasDynamicValueCode", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAction", "Entity")
                        .WithMany("DynamicValueCodeList")
                        .HasForeignKey("EntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaDynamicValueCode", "Relation")
                        .WithMany()
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaActionStepHasActionInput", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionStep", "Entity")
                        .WithMany("ActionInputList")
                        .HasForeignKey("EntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionInput", "Relation")
                        .WithMany("ActionStepList")
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaContextHasAction", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaContext", "Entity")
                        .WithMany("ActionList")
                        .HasForeignKey("EntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAction", "Relation")
                        .WithMany("ContextList")
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaContextHasElement", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaContext", "Entity")
                        .WithMany("ElementList")
                        .HasForeignKey("EntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaElement", "Relation")
                        .WithMany("ContextList")
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaElementHasProperty", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaElement", "Entity")
                        .WithMany("PropertyList")
                        .HasForeignKey("EntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaProperty", "Relation")
                        .WithMany("ElementList")
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Junctions.TableJunctionSchemaInputHasAttribute", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaInput", "Entity")
                        .WithMany()
                        .HasForeignKey("EntityID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAttribute", "Relation")
                        .WithMany("InputList")
                        .HasForeignKey("RelationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entity");

                    b.Navigation("Relation");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAction", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("ActionList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue", "TitleDynamic")
                        .WithMany("ActionList")
                        .HasForeignKey("TitleDynamicID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");

                    b.Navigation("TitleDynamic");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionInput", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaInput", "Input")
                        .WithMany("ActionInputList")
                        .HasForeignKey("InputID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("ActionInputList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Input");

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionStep", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("ActionStepList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAttribute", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany()
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaContext", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("ContextList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaElement", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("ElementList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaGroupElement", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("GroupElementList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaInput", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", "Schema")
                        .WithMany("InputList")
                        .HasForeignKey("SchemaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Schema");
                });

            modelBuilder.Entity("TableSchemaElementTableSchemaGroupElement", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaElement", null)
                        .WithMany()
                        .HasForeignKey("ElementListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaGroupElement", null)
                        .WithMany()
                        .HasForeignKey("GroupElementListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Associations.TableAssociationSchemaActionInputHasAttributeDynamicValue", b =>
                {
                    b.HasOne("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue", "Value")
                        .WithMany("ActionInputAttributeList")
                        .HasForeignKey("ValueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Value");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Authentication.TableAuthentication", b =>
                {
                    b.Navigation("User");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Authentication.TableUser", b =>
                {
                    b.Navigation("IdentityList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Data.TableDataElement", b =>
                {
                    b.Navigation("PropertyList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaDynamicValue", b =>
                {
                    b.Navigation("ActionInputAttributeList");

                    b.Navigation("ActionList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.Discriminators.TableSchemaProperty", b =>
                {
                    b.Navigation("ElementList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchema", b =>
                {
                    b.Navigation("ActionInputList");

                    b.Navigation("ActionList");

                    b.Navigation("ActionStepList");

                    b.Navigation("ContextList");

                    b.Navigation("DynamicValueList");

                    b.Navigation("ElementList");

                    b.Navigation("GroupElementList");

                    b.Navigation("InputList");

                    b.Navigation("PropertyList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAction", b =>
                {
                    b.Navigation("ActionStepList");

                    b.Navigation("ContextList");

                    b.Navigation("DynamicValueCodeList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionInput", b =>
                {
                    b.Navigation("ActionStepList");

                    b.Navigation("AttributeList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaActionStep", b =>
                {
                    b.Navigation("ActionInputList");

                    b.Navigation("ActionList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaAttribute", b =>
                {
                    b.Navigation("InputList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaContext", b =>
                {
                    b.Navigation("ActionList");

                    b.Navigation("ElementList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaElement", b =>
                {
                    b.Navigation("ContextList");

                    b.Navigation("PropertyList");
                });

            modelBuilder.Entity("Noxy.NET.Test.Persistence.Tables.Schemas.TableSchemaInput", b =>
                {
                    b.Navigation("ActionInputList");
                });
#pragma warning restore 612, 618
        }
    }
}
