@page "/Context/{identifier}"
@inject DataAPIService DataAPIService
@inject TextService TextService
@inherits PageComponent

<PageTitle>Home | @_entityContext?.TitleDynamic</PageTitle>

<AuthorizeLayout>
    <PageLayout>
        @if (IsRendered)
        {
            <MagazineLayout>
                <Content>
                    <ElementPanel List="_listElement"/>
                    <ActionPanel List="_listAction" OnActionComplete="OnActionPanelActionComplete"/>
                </Content>
            </MagazineLayout>
        }
        else
        {
            <span>Loading...</span>
        }
    </PageLayout>
</AuthorizeLayout>

@code {

    [Parameter]
    public string Identifier { get; set; } = string.Empty;

    private ViewModelSchemaContext? _entityContext;
    private ViewModelSchemaAction[] _listAction = [];
    private ViewModelDataElement[] _listElement = [];

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (!firstRender) return;

        await WithLoader(LoadData);
        await WithLoader(TextService.Resolve);
    }

    private async Task OnActionPanelActionComplete()
    {
        await WithLoader(LoadData);
        await WithLoader(TextService.Resolve);
    }

    private async Task LoadData()
    {
        await LoadContext();
        await LoadAction();
        await LoadElement();
    }
    
    private async Task LoadContext()
    {
        _entityContext = await DataAPIService.GetContextWithIdentifier(Identifier);
    }
    
    private async Task LoadAction()
    {
        _listAction = await DataAPIService.GetActionListByContext(Identifier);
    }

    private async Task LoadElement()
    {
        _listElement = await DataAPIService.GetElementListByContext(Identifier);
    }

}
