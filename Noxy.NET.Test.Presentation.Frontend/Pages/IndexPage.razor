@page "/"
@inject DataAPIService DataAPIService
@inject TextService TextService
@inject UserAuthenticationStateProvider UserAuthenticationStateProvider
@inherits PageComponent

<PageTitle>Home</PageTitle>

<AuthorizeLayout>
    <PageLayout>
        @foreach (ViewModelSchemaContext item in _listContext)
        {
            <h2>@item.TitleDynamic</h2>
            <span>@item.DescriptionDynamic</span>
            <NavLink href="@GetLink(item.SchemaIdentifier)">@TextService.Get(TextConstants.LinkNavigationSchema)</NavLink>
        }

        <Collapsible CollapsedChanged="UpdateText">
            <Header>
                Test
            </Header>
            <Content>
                @TextService.Get(TextConstants.HelpFormSchemaIdentifier)
            </Content>
        </Collapsible>

        <Collapsible Animated="false">
            <Header>
                Test
            </Header>
            <Content>
                Hello World
            </Content>
        </Collapsible>
    </PageLayout>
</AuthorizeLayout>

@code {

    private ViewModelSchemaContext[] _listContext = [];

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (!firstRender) return;

        await WithLoader(TextService.Resolve);
        if ((await UserAuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity?.IsAuthenticated ?? true) return;
        await WithLoader(LoadData);
    }

    private async Task UpdateText()
    {
        await TextService.Resolve();
    }

    private async Task LoadData()
    {
        _listContext = await DataAPIService.GetContextList();
    }

    private static string GetLink(string identifier)
    {
        return $"/Context/{identifier}";
    }

}
