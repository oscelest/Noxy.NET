@page "/Schema/{id:guid}"
@inject SchemaAPIService SchemaAPIService
@inject TextService TextService
@inherits PageComponent

<PageTitle>Home</PageTitle>

<AuthorizeLayout>
    <PageLayout>
        @if (_data != null)
        {
            <h2>@_data.Name</h2>
            <SchemaOverviewAction Schema="_data"/>
            <SchemaOverviewActionStep Schema="_data"/>
            <SchemaOverviewActionInput Schema="_data"/>
            <SchemaOverviewAttribute Schema="_data"/>
            <SchemaOverviewDynamicValue Schema="_data"/>
            <SchemaOverviewElement Schema="_data"/>
            <SchemaOverviewInput Schema="_data"/>
            <SchemaOverviewProperty Schema="_data"/>
        }
        else
        {
            <span>Loading...</span>
        }
    </PageLayout>
</AuthorizeLayout>

@code {

    [Parameter]
    public Guid ID { get; set; }

    private EntitySchema? _data;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (!firstRender) return;

        await WithLoader(LoadData);
        await WithLoader(TextService.Resolve);
    }

    private async Task LoadData()
    {
        _data = await SchemaAPIService.GetSchemaWithID(ID);
    }

}
