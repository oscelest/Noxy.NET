@page "/Schema"
@inject SchemaAPIService SchemaAPIService
@inject TextService TextService
@inherits PageComponent

<PageTitle>Home</PageTitle>

<AuthorizeLayout>
    <PageLayout>
        <SidebarRightLayout>
            <Sidebar>
                <FormSchema OnChange="LoadData"/>
            </Sidebar>
            <Content>
                <TemplateGridList List="_data">
                    <SchemaPanel Schema="@context" OnSchemaChange="OnSchemaPanelSchemaChange"/>
                </TemplateGridList>
            </Content>
        </SidebarRightLayout>
    </PageLayout>
</AuthorizeLayout>

@code {

    private List<EntitySchema> _data = [];

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (!firstRender) return;

        await WithLoader(LoadData);
        await WithLoader(TextService.Resolve);
    }

    private async Task OnSchemaPanelSchemaChange()
    {
        await WithLoader(LoadData);
    }

    private async Task LoadData()
    {
        _data = await SchemaAPIService.GetSchemaList();
    }

}
