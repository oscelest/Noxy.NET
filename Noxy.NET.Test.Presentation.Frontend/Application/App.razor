@inject UserAuthenticationStateProvider AuthService
@inject AuthenticationAPIService AuthAPIService

<Router AppAssembly="@typeof(App).Assembly">
    <Found Context="routeData">
        <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)"/>
    </Found>
    <NotFound>
        <PageTitle>Not found</PageTitle>
        <LayoutView Layout="@typeof(MainLayout)">
            <p role="alert">Sorry, there's nothing at this address.</p>
        </LayoutView>
    </NotFound>
</Router>

@code {
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (!firstRender) return;

        AuthenticationState state = await AuthService.GetAuthenticationStateAsync();
        if (state.User.Identity?.IsAuthenticated ?? false)
        {
            try
            {
                string token = await AuthAPIService.RenewUser();
                await AuthService.UpdateIdentity(token);
            }
            catch
            {
                await AuthService.ResetIdentity();
            }
        }
    }
}
