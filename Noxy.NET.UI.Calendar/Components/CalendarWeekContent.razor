@inherits ElementComponent

<div @attributes="AdditionalAttributes" class="@CssClass" mode="@ModeCurrent">
    <div class="day-list">
        @for (int i = 1; i <= 7; i++)
        {
            int day = i;
            <div class="day">
                @CultureInfo.CurrentCulture.DateTimeFormat.DayNames[day]
            </div>
        }
    </div>

</div>

@code {

    [Parameter] public RenderFragment<int>? Content { get; set; }

    [Parameter] public CalenderModeEnum? Mode { get; set; }
    private CalenderModeEnum ModeCurrent => Mode ?? CalenderModeEnum.Month;

    [Parameter] public DateTime? Min { get; set; }

    [Parameter] public DateTime? Max { get; set; }

    [Parameter] public DateTime? Value { get; set; }
    private DateTime ValueCurrent => Value ?? DateTime.UtcNow;

    [Parameter] public EventCallback<DateTime> ValueChanged { get; set; }

    [Parameter] public Expression<Func<DateTime>>? ValueExpression { get; set; }

    private DateTime? _internalValue;
    private int _days;
    private int _month;

    private string MonthString => CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(_month);

    protected override void OnInitialized()
    {
        base.OnInitialized();

        UpdateDate();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (ValueCurrent != _internalValue)
        {
            UpdateDate();
        }
    }

    private void UpdateDate()
    {
        _internalValue = ValueCurrent;
        _days = DateTime.DaysInMonth(ValueCurrent.Year, ValueCurrent.Month);
        _month = ValueCurrent.Month;
    }

}
