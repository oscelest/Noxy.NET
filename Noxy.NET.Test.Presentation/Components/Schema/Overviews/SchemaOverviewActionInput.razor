@inherits ElementComponent

<div @attributes="AdditionalAttributes" class="@CssClass">
    <TemplateSchemaOverview Schema="Schema" List="Schema.ActionInputList">
        <Header>
            <h3>Action inputs</h3>
        </Header>

        <Form>
            <FormSchemaActionInput Schema="Schema" Value="context" OnChange="FormChange"/>
        </Form>

        <Display>
            <TemplateInputGroup DisplayName="@TextConstants.FormEntitySchemaLabelSchemaIdentifier">
                <span>@context.SchemaIdentifier.DefaultIfEmpty(TextConstants.DefaultEmptyValue)</span>
            </TemplateInputGroup>

            <TemplateInputGroup DisplayName="@TextConstants.FormEntitySchemaLabelName">
                <span>@context.Name.DefaultIfEmpty(TextConstants.DefaultEmptyValue)</span>
            </TemplateInputGroup>

            <TemplateInputGroup DisplayName="@TextConstants.FormEntitySchemaLabelNote">
                <span>@context.Note.DefaultIfEmpty(TextConstants.DefaultEmptyValue)</span>
            </TemplateInputGroup>

            <TemplateInputGroup DisplayName="@TextConstants.FormEntitySchemaLabelTitle">
                <span>@context.Title.DefaultIfEmpty(TextConstants.DefaultEmptyValue)</span>
            </TemplateInputGroup>

            <TemplateInputGroup DisplayName="@TextConstants.FormEntitySchemaLabelDescription">
                <span>@context.Description.DefaultIfEmpty(TextConstants.DefaultEmptyValue)</span>
            </TemplateInputGroup>
        </Display>
    </TemplateSchemaOverview>
</div>

@code {

    [Parameter, EditorRequired]
    public required EntitySchema Schema { get; set; }

    private void FormChange(EntitySchemaActionInput entity)
    {
        Schema.ActionInputList = Schema.ActionInputList?.Where(x => x.ID != entity.ID).Append(entity).OrderBy(x => x.Order).ToList();
    }

}