@typeparam T where T : class
@inherits ElementComponent

<div @attributes="AdditionalAttributes" class="@CssClass">
    @foreach (KeyValuePair<string, string?> pair in GetCollection())
    {
        <TemplateInputGroup DisplayName="@pair.Key">
            <span>@pair.Value?.DefaultIfEmpty(TextConstants.DefaultEmptyValue)</span>
        </TemplateInputGroup>
    }
</div>

@code {

    [Parameter, EditorRequired]
    public required T Entity { get; set; }

    private Dictionary<string, string?> GetCollection()
    {
        Dictionary<string, string?> result = [];
        foreach (PropertyInfo item in typeof(T).GetProperties())
        {
            DisplayNameAttribute? attribute = item.GetCustomAttribute<DisplayNameAttribute>();
            if (attribute == null) continue;

            result.Add(attribute.DisplayName, item.GetValue(Entity)?.ToString());
        }

        return result;
    }

}
