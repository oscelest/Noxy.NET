@inherits ElementComponent

<div @attributes="AdditionalAttributes" class="@CssClass">
    @if (ListActionStep.Length == 1)
    {
        ViewModelSchemaActionHasActionStep step = ListActionStep.First();

        <DynamicHTMLTag Tag="@HeaderLevelCurrent.ToText()">
            @step.ActionStep?.TitleDynamic
        </DynamicHTMLTag>
        
        @if (step.ActionStep?.DescriptionDynamic != null)
        {
            <span>@step.ActionStep?.DescriptionDynamic</span>
        }

        <TemplateActionStep Context="Context" ActionStep="step.ActionStep"/>
    }
    else
    {
        @foreach (ViewModelSchemaActionHasActionStep step in ListActionStep.OrderBy(x => x.Order))
        {
            <Collapsible>
                <Header>
                    <DynamicHTMLTag Tag="@HeaderLevelCurrent.ToText()">
                        @step.ActionStep?.TitleDynamic
                    </DynamicHTMLTag>
                </Header>
                <Content>
                    <div class="content">
                        @if (step.ActionStep?.DescriptionDynamic != null)
                        {
                            <span>@step.ActionStep?.DescriptionDynamic</span>
                        }

                        <TemplateActionStep Context="Context" ActionStep="step.ActionStep"/>
                    </div>
                </Content>
            </Collapsible>
        }
    }
</div>

@code {

    [Parameter, EditorRequired]
    public required ViewModelSchemaActionHasActionStep[] ListActionStep { get; set; }

    [Parameter, EditorRequired]
    public required ContextAction? Context { get; set; }

    [Parameter]
    public HTMLHeaderElementEnum? HeaderLevel { get; set; }
    private HTMLHeaderElementEnum HeaderLevelCurrent => HeaderLevel ?? HTMLHeaderElementEnum.H3;

}