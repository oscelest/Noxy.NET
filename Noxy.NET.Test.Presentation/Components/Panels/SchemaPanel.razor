@inject SchemaAPIService SchemaAPIService
@inject TextService TextService
@inherits ElementComponent

<div @attributes="AdditionalAttributes" class="@CssClass">
    <TemplatePanel HeaderLevel="HTMLHeaderElementEnum.H2">
        <Header>
            <span class="title">@Schema.Name</span>
            <NavLink href="@GetSchemaLink()">
                <IconForward/>
            </NavLink>
        </Header>
        <Content>
            <span class="note">
                @Schema.Note
            </span>

            @if (!Schema.IsActive)
            {
                <Button Status="StatusEnum.Warning" @onclick="Activate">
                    @TextService.Get(TextConstants.ButtonActivate)
                </Button>
            }
        </Content>
    </TemplatePanel>
</div>

@code {

    [Parameter, EditorRequired]
    public required EntitySchema Schema { get; set; }

    [Parameter]
    public EventCallback<EntitySchema> OnSchemaChange { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (!firstRender) return;

        await WithLoader(TextService.Resolve);
    }
    
    private string GetSchemaLink()
    {
        return $"/Schema/{Schema.ID}";
    }

    private async Task Activate()
    {
        await WithLoader(async () => await SchemaAPIService.ActivateSchema(Schema.ID));
        await OnSchemaChange.InvokeAsync(Schema);
    }

}