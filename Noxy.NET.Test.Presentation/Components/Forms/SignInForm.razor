@inject AuthenticationAPIService APIService
@inject UserAuthenticationStateProvider AuthService
@inject TextService TextService
@inherits ElementComponent

<div @attributes="AdditionalAttributes" class="@CssClass">
    <WebForm Context="Context" OnSubmit="() => Context.Submit(FormSubmit)">
        <InputGroupText @bind-Value="Context.Model.Email"/>
        <InputGroupPassword Autocomplete="WebFormInputFieldPasswordAutocompleteEnum.CurrentPassword" @bind-Value="Context.Model.Password"/>

        <Button Status="StatusEnum.Success" type="submit">@TextService.Get(TextConstants.ButtonSignIn)</Button>
    </WebForm>
</div>

@code {

    private WebFormContext<SignInUserFormModel> Context { get; } = new(new());

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (!firstRender) return;

        await WithLoader(TextService.Resolve);
    }
    
    private async void FormSubmit()
    {
        try
        {
            if (!Context.Validate()) return;
            string result = await APIService.SignInUser(Context.Model);
            await AuthService.UpdateIdentity(result);
        }
        catch (Exception e)
        {
            Context.HandleException(e);
        }
    }

}
